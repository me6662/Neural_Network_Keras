# CNN (Convolutional Neural Network)

사물 인식 기술에 사용되는 모델 
최초는 알렉스 크리체프스키와 그의 연구진의 AlexNet (2012 년)

사물인식기술 은 3가지로 나뉜다.
1. 이미지 분류
2. 사물 탐지
3. 이미지 분할

강아지 사진
-> (1) 이미지분류 : 개라고 판별
-> (2) 사물탐지 : 개를 탐지
-> (3) 이미지분할 : 개만 배경에서 잘라내기함

이미지 분류가 머신러닝에서 분류모델과 비슷한데, 기존의 테이블데이터를 입력받아 0 1 을 분류하는게 아니고
화소(pixel) 를 입력데이터로 이용한다는점이다.

사물탐지는 이미지분류보다 더 진보한 기술이다. AlexNet 등장이 후 2년 뒤인 2014년 길쉬크와 그의 연구진은
이미지 분류 결과를 사물탐지로 일반화하는 방법을 고안해냈다. 
사물이 있을만한곳에 경계선을 여러개 만들고 CNN 으로 '이미지분류' 하는 것이다.
이를 R-CNN 이라고 한다. (Regional with CNN)

이미지분할은 사물탐지를 더욱 정교하게 하는 기술이며, 스마트폰 카메라에 탑재된 인물사진기능은 이미지분할기술의 활용이다.
이는 자율주행기술에도 쓰여서 사물을 정밀하게 인식하는데 사용한다!


# 신경망에 이미지를 입력하는 방법

모든 이미지파일은 이미 숫자다! 

각 화소 (픽셀) 마다 강도값이 있음
흑백의 경우 흰색은 0 , 검은색은 255
컬러의 경우 세가지 채널 (R G B) 을 가짐
흑백의 경우 2차원인 반면 , 컬러는 3차원이게 됨.
쨌든 숫자이므로 신경망이 바로 처리할 수 있음 (요일 넣을때 one hot 인코딩 한것처럼 안해도됨.)


# 컴퓨터의 이미지분류 비결 - Convolution
세상에는 수많은 사진이 있기 때문에 단순한 알고리즘으로는 컴퓨터는 이미지를 분류하기 어렵다.
(개만 해도 수많은 품종에 수많은 배경에서 수많은 포즈로 찍힘)

그래도 사람은 개와 고양이를 많이 보지않아도 구분할줄 안다!
사람이 개와 고양이를 구분하는 비법은 '대표적인 특징'을 인식하기 때문이다.

컴퓨터도 이와 비슷한 비법인 'Convolution' 을 활용한다.


# 필터링 그리고 컨볼루션
컨볼루션을 이해하려면 먼저 필터링이라는 것을 알아야 한다.
O, X 가 아무렇게나 그려진 디지털 사진을 구분한다고 해보자 예시니까 27 X 27 이라고 가정한다.

어떤 O는 잘그렸고 어떤 O 는 찌그러져있을 것이다.
그렇지만 공통적으로 O 는 수평을 가지는 특징이 있다.

X 또한 어떤년은 잘그렸고 어떤년은 찌그러져있따. 하지만 공통적으로
대각선방향으로 그려진다는 특징이 있다.

이 공통 특징으로 필터를 만든다!
3 X 3 의 필터를 가지고 27 x 27 의 면적을 차례로 돌면서 (슬라이딩 윈도) 필터를 적용하는 과정을 컨볼루션이라고 한다.

0 0 0
1 1 1
0 0 0    이 필터를 가지고 27 x 27 사진을 돌면서 같은 좌표끼리 곱하고 더한다. (컨볼루션)
만약 일치하는게 없다면 0 이 될것이고 다 일치하면 3이될것이다.

이 과정을 수행하게 해주는 신경망 레이어를 '컨볼루션 레이어' 라고 한다.
컨볼루션 레이어는 필터가 가진 '공통특징' 을 이미지의 어느위치에서 어느정도로 가지고 있는지 보여주는 지도를 출력하게 될것이다.
이 컨볼루션 레이어 또한 Dense Layer 처럼 Weight 을 가지고 있으며 이를 학습시킬 수 있다.

# 컨볼루션 레이어의 필터
컨볼루션 레이어는 필터를 여러개 사용할 수도 있다.
(특징이 여러개라면 여러개를 사용해야함.)
또한 특징이 커다랗다면 필터크기도 커야 될 것이다.
이 필터 특징은 컨볼루션 레이어의 초매개변수로 나타난다. (필터개수, 필터크기)

# 최대풀링 레이어
CNN 에서 컨볼루션 레이어 다음에는 무조건 최대풀링 (Max Pooling) 레이어를 배치한다.
역할은 컨볼루션 레이어의 출력의 Weight 개수를 줄여서 모델복잡도를 줄이고 Over fitting 을 방지해준다.

원리는 전달받은 행렬을 분할해서 최댓값 빼고는 다 버린다. 
압축한다고 보면된다. 그냥


# CNN 의 기본 아키텍쳐

 입력 > 
        Convolution Layer with Relu > Max Pooling Layer 
        > Convolution Layer with Relu > Max Pooling Layer   
        > Dense Layer with Sigmoid (이진분류) or Softmax(다중클래스 분류)
        > Dense Layer with Sigmoid (이진분류) or Softmax(다중클래스 분류)

        > 출력

맨뒤에 Dense Layer 가 두개인 이유는 MLP (Multi Layer Perceptron) 라고 생각하면 된다. (보통의 분류 문제) 
Convolution Layer 에서 필터를 통해 특징을 추출하고 그 지도정보를 만들면
그거가지고 Dense Layer 에서는 MLP 랑 마찬가지로 '분류' 하는 것이다.

결론적으로!
Convolution Layer + Max Pooling Layer 는 특징을 식별하고
Dense Layer 는 최종 분류를 담당한다.

앞서 했었던 Deep Feed Forward 보다 더 인공지능적이라고 할 수 있는점은
앞서는 애새끼한테 특징공학 이라고 해서 (Feature Engineering) 데이터 잘 골라서 떠먹여 줘야 했는데
CNN 은 단순히 데이터만 제공하면 클래스를 가장 잘 분류할 수 있는 최적의 특징을 지가 알아서 학습함.




